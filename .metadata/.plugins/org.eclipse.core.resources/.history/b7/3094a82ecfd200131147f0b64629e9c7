from django.shortcuts import  render_to_response, render
from tweet.models import tweet , Comment 
from django.http import HttpResponse
from tweet.forms import TweetForm, CommentForm
from django.http import HttpResponseRedirect
from django.core.context_processors import csrf
from django.utils import timezone
from django.conf import settings
#from haystack.query import SearchQuerySet
from django.template import RequestContext
from django.contrib import messages

import logging
    
logr = logging.getLogger(__name__)
# Create your views here.

def tweets(request):
    language = 'en-gb'
    session_language = 'en-gb'
    
    if 'lang' in request.COOKIES:
        language = request.COOKIES['lang']
    
    if 'lang' in request.session:
        session_language = request.session['lang']
   
    args = {}
    args.update(csrf(request)) 
    args['tweets'] = tweet.objects.all()
    args['language'] = language
    args['session_language'] = session_language
    return render_to_response('tweets.html', args)
    
def language(request, language='en-gb'):
    response = HttpResponse("setting language to %s" % language)
    
    response.set_cookie('lang', language)
    request.session['lang'] = language
    return response

def tweety(request, tweet_id =1):
    return render_to_response('tweet.html',
                              {'tweet' : tweet.objects.get(id=tweet_id)})


def create(request):
    if request.POST:
        form = TweetForm(request.POST)
        if form.is_valid():
            a = form.save()
                    
            return HttpResponseRedirect('/tweets/all')
    else:
        form = TweetForm()
        
    args = {}
    args.update(csrf(request))
    
    args['form'] = form
    
    return render_to_response('create_tweet.html', args)

        
def like_tweet(request, tweet_id):
    if tweet_id:
        a = tweet.objects.get(id=tweet_id)
        count = a.likes
        count += 1
        a.likes = count
        a.save()
        
    return HttpResponseRedirect('/tweets/get/%s' % tweet_id )
        


def delete_comment(request, comment_id):
    c = Comment.objects.get(id=comment_id)
    
    tweet_id = c.tweet.id
    
    c.delete()
    
    messages.add_message(request, 
                         settings.DELETE_MESSAGE,
                         "Your comment was deleted")
    
    return HttpResponseRedirect("/tweet/get/%s" % tweet_id)

def add_comment(request, tweet_id):
    a = tweet.objects.get(id=tweet_id)
    
    if request.method == "POST":
        f = CommentForm(request.POST)
        if f.is_valid():
            c = f.save(commit=False)
            c.pub_date = timezone.now()
            c.tweet = a
            c.save()
            
            messages.success(request, "You Comment was added")
            
            return HttpResponseRedirect('/tweet/get/%s' % tweet_id)
        
    else:
        f = CommentForm()

    args = {}
    args.update(csrf(request))
    
    args['tweet'] = a
    args['form'] = f
    
    return render_to_response('add_comment.html', args)    

def search_titles(request):
    if request.method == 'POST':
        search_text = request.post['search_text']
    else:
        search_text =''
    tweets = tweet.objects.filter(title__contains=search_text)
    return render_to_response('ajax_search.html' , {'tweets' : tweets})
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
